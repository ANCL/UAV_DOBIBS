# Build and autotest script for PX4 Firmware
# http://travis-ci.org

language: cpp

git:
  depth: 1000

matrix:
  fast_finish: true
  include:
    - os: linux
      sudo: required
      env: GCC_VER=4.9 DOCKER_REPO="px4io/px4-dev-base:2016-10-20"
      services:
        - docker
    - os: osx
      sudo: true
      osx_image: xcode8
      env: CCACHE_CPP2=1

cache:
  ccache: true
  pip: true
  directories:
    - $HOME/.pip/cache/
    - $HOME/Library/Caches/pip

before_install:
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
         cd ${TRAVIS_BUILD_DIR}
      && git fetch --unshallow && git fetch --all --tags
      && docker pull ${DOCKER_REPO}
      ;
    elif [ "${TRAVIS_OS_NAME}" = "osx" ]; then
         sudo -H easy_install pip
      && sudo -H pip install empy
      && wget https://s3.amazonaws.com/px4-travis/toolchain/macos/ccache
      && sudo mv ccache /usr/local/bin
      && chmod +x /usr/local/bin/ccache
      && mkdir -p ~/bin
      && sudo ln -s /usr/local/bin/ccache ~/bin/c++
      && sudo ln -s /usr/local/bin/ccache ~/bin/cc
      && sudo ln -s /usr/local/bin/ccache ~/bin/clang
      && sudo ln -s /usr/local/bin/ccache ~/bin/clang++
      && sudo ln -s /usr/local/bin/ccache ~/bin/g++
      && sudo ln -s /usr/local/bin/ccache ~/bin/gcc
      && export PATH=~/bin:$PATH
      && wget https://s3.amazonaws.com/px4-travis/toolchain/macos/ninja
      && sudo mv ninja /usr/local/bin
      && chmod +x /usr/local/bin/ninja
      ;
    fi

env:
  global:
# AWS KEY: $PX4_AWS_KEY
    - secure: "XknnZHWBbpHbN4f3fuAVwUztdLIu8ej4keC3aQSDofo3uw8AFEzojfsQsN9u77ShWSIV4iYJWh9C9ALkCx7TocJ+xYjiboo10YhM9lH/8u+EXjYWG6GHS8ua0wkir+cViSxoLNaMtmcb/rPTicJecAGANxLsIHyBAgTL3fkbLSA="
# AWS SECRET: $PX4_AWS_SECRET
    - secure: "h6oajlW68dWIr+wZhO58Dv6e68dZHrBLVA6lPXZmheFQBW6Xam1HuLGA0LOW6cL9TnrAsOZ8g4goB58eMQnMEijFZKi3mhRwZhd/Xjq/ZGJOWBUrLoQHZUw2dQk5ja5vmUlKEoQnFZjDuMjx8KfX5ZMNy8A3yssWZtJYHD8c+bk="
    - PX4_AWS_BUCKET=px4-travis
    - GIT_SUBMODULES_ARE_EVIL=1

script:
  - ccache -M 1GB; ccache -z
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
      docker run --rm -v `pwd`:`pwd`:rw -v $HOME/.ccache:$HOME/.ccache:rw -e CCACHE_DIR=$HOME/.ccache -e CI=true -e GIT_SUBMODULES_ARE_EVIL=1 -w=`pwd` --user=$UID -it ${DOCKER_REPO} /bin/bash -c "make check_qgc_firmware VECTORCONTROL=0";
    elif [ "${TRAVIS_OS_NAME}" = "osx" ]; then
      make tests;
    fi
  - ccache -s

after_success:
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
         make package_firmware && mkdir s3deploy-archive && cp Firmware.zip s3deploy-archive/
      && find . -type f -name 'nuttx-*-default.px4' -exec cp "{}" . \;
      && find . -maxdepth 1 -mindepth 1 -type f -name 'nuttx-*-default.px4' | sed 's/.\/nuttx-//' | sed 's/-default.px4//' | xargs -I{} mv nuttx-{}-default.px4 {}_default.px4
      && mkdir s3deploy-branch && mv *_default.px4 build_px4fmu-v2_default/parameters.xml build_px4fmu-v2_default/airframes.xml s3deploy-branch/;
    fi
  - if [[ "${TRAVIS_OS_NAME}" = "linux" && "$GCC_VER" == "4.9" ]]; then
      export PX4_S3_DEPLOY=1;
    fi

deploy:
# deploy *.px4 to S3 px4-travis/Firmware/$TRAVIS_BRANCH
  - provider: s3
    access_key_id: $PX4_AWS_KEY
    secret_access_key:
      secure: $PX4_AWS_SECRET
    bucket: px4-travis
    local_dir: s3deploy-branch
    upload-dir: Firmware/$TRAVIS_BRANCH
    acl: public_read
    skip_cleanup: true
    on:
      all_branches: true
      condition: $PX4_S3_DEPLOY = 1

# deploy Firmware.zip to S3 px4-travis/archives/Firmware/$TRAVIS_BRANCH/$TRAVIS_BUILD_ID
  - provider: s3
    access_key_id: $PX4_AWS_KEY
    secret_access_key:
      secure: $PX4_AWS_SECRET
    bucket: px4-travis
    local_dir: s3deploy-archive
    upload-dir: archives/Firmware/$TRAVIS_BRANCH/$TRAVIS_BUILD_ID
    acl: public_read
    skip_cleanup: true
    on:
      all_branches: true
      condition: $PX4_S3_DEPLOY = 1

# on tags deploy Firmware.zip to Github releases
  - provider: releases
    api_key: 
      secure: cdHWLRBxA5UlYpOS0Sp891QK7PFmMgQ5ZWs1aPt+sw0rIrowyWMHCwXNBEdUqaExHYNYgXCUDI0EzNgfB7ZcR63Qv1MQeoyamV4jsxlyAqDqmxNtWO82S6RhHGeMLk26VgFKzynVcEk1IYlQP2nqzMQLdu+jTrngERuAIrCdRuc=
    file: "Firmware.zip"
    skip_cleanup: true
    on:
      tags: true
      all_branches: true
      repo: PX4/Firmware
      condition: $GCC_VER = 4.9

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/2b9c4a4cb2211f8befba
    on_success: always  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
  slack:
    rooms:
      - secure: "QKw73Zel/s3JAbe/7XyO9tPnJwiiGFpYzSjdR8lG3tYFjRdXZnhxG4c+G7bkgkaPTS4Hult33VXE3kcEqOI7+C+eRwRlZhDfL0knQbXVCxjcLjzmUFdoPOwurlgZDw66PFWCi5tZcLKSRo3u4U8ibT4WKi3jm9sDSyOcfBAucMU="
    on_pull_requests: false
    on_success: never  # options: [always|never|change] default: always
    on_failure: never  # options: [always|never|change] default: always
